{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/utils/regex.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","urlPattern","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasUrlFormatError","test","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","isFormValidated","onSubmit","e","preventDefault","prevCount","newTitle","newDescription","newImgUrl","newImdbUrl","newImdbId","disabled","cn","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4047a540.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// eslint-disable-next-line max-len\nexport const urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { urlPattern } from '../utils/regex';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n  const hasUrlFormatError = (name === 'imdbUrl' || name === 'imgUrl')\n    && touched && value && !urlPattern.test(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasUrlFormatError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {hasUrlFormatError && (\n        <p className=\"help is-danger\">{`${label} must be valid`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\nimport { urlPattern } from '../utils/regex';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const isFormValidated = !!(title && urlPattern.test(imgUrl)\n    && urlPattern.test(imdbUrl) && imdbId);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (isFormValidated) {\n      const newMovie: Movie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      onAdd(newMovie);\n\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n      setCount(prevCount => prevCount + 1);\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newTitle: string) => setTitle(newTitle)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newDescription: string) => setDescription(newDescription)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(newImgUrl: string) => setImgUrl(newImgUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(newImdbUrl: string) => setImdbUrl(newImdbUrl)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(newImdbId: string) => setImdbId(newImdbId)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            disabled={!isFormValidated}\n            className={cn('button is-link', {\n              'is-light': !isFormValidated,\n            })}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport moviesFromServer from './api/movies.json';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}